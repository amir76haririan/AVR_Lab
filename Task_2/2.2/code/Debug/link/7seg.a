;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0

	.DSEG
;interrupt [10] void timer0_ovf_isr(void)
; 0000 0028 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0029 
; 0000 002A counter0++;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002B 
; 0000 002C if(counter0 ==3){
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002D temp = PORTC ^ 0b11111111;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 002E PORTC= temp ^ 0b11111111;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002F PORTD = SevenSeg[SevenSegCounter[lastSevenSeg]];
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0030 temp = temp >>1;
;PCODE: $00000027 VOL: 0
; 0000 0031 
; 0000 0032 if(temp == 0){
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0033 
; 0000 0034 temp = 8;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0035 
; 0000 0036 }
; 0000 0037 
; 0000 0038 temp = temp ^ 0b11111111;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0039 PORTC = temp;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 003A temp = temp ^ 0b11111111;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 003B 
; 0000 003C counter0 = 0;
;PCODE: $00000035 VOL: 0
; 0000 003D lastSevenSeg--;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 003E 
; 0000 003F if(lastSevenSeg == -1 ){
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0040 
; 0000 0041 lastSevenSeg = 3;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0042 
; 0000 0043 }
; 0000 0044 
; 0000 0045 }
;PCODE: $0000003E VOL: 0
; 0000 0046 TCNT0=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0047 
; 0000 0048 }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;interrupt [9] void timer1_ovf_isr(void)
; 0000 004B {
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 004C 
; 0000 004D counter1++;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004E 
; 0000 004F 
; 0000 0050 if(counter1 == 300){
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0051 
; 0000 0052 SevenSegCounter[3]++;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0053 
; 0000 0054 while (i>=0){
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0055 
; 0000 0056 if( SevenSegCounter[i] ==10){
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0057 
; 0000 0058 SevenSegCounter[i-1]++;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0059 SevenSegCounter[i]=0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 005A 
; 0000 005B }
; 0000 005C 
; 0000 005D i--;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 005E }
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 005F 
; 0000 0060 
; 0000 0061 i = 3;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0062 counter1 = 0;
;PCODE: $00000072 VOL: 0
; 0000 0063 
; 0000 0064 }
; 0000 0065 
; 0000 0066 TCNT1H=0xFF;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0067 TCNT1L=0xF0;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0068 
; 0000 0069 }
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;void main(void){
; 0000 006C void main(void){
;PCODE: $0000007B VOL: 0
; 0000 006D DDRD = 0xFF;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 006E DDRC = 0xFF;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006F PORTC = 0xEF;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0070 // 0b00001000 = 8 decimal
; 0000 0071 
; 0000 0072 // Timer/Counter 0 initialization
; 0000 0073 TCCR0=0x05;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0074 TCNT0=0x00;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0075 OCR0=0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0076 
; 0000 0077 TCCR1A = 0x00;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0078 TCCR1B = 0x05;  // Clock source: System Clock  //Enable(CS12)&  (CS10)
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0079 
; 0000 007A 
; 0000 007B // Timer/Counter 1 initialization
; 0000 007C TCNT1H = 0xFF;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 007D TCNT1L = 0xF0;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 007E 
; 0000 007F // External Interrupt initialization
; 0000 0080 MCUCR =(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0081 MCUCSR =(0<<ISC2);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0082 
; 0000 0083 TIMSK = 0x05;   // Enable timer0 & timer1 overflow interrupt(TOIE0)&(TOIE1)
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0084 #asm ("sei")    // Enable global interrupts
;PCODE: $00000096 VOL: 0
; 0000 0085 
; 0000 0086 while(1){
;PCODE: $00000097 VOL: 0
; 0000 0087 ;   //do nothing
; 0000 0088 }
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0089 
; 0000 008A }
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
